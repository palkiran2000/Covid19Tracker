{"version":3,"sources":["components/Home.js","components/Statewise.js","assets/vaccine1.jpg","components/India.js","components/ScrollToTop.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","totalDeaths","setTotalDeaths","totalconfirmed","setTotalConfirmed","totalrecovered","setTotalRecovered","totalDeaths1","setTotalDeaths1","totalconfirmed1","setTotalConfirmed1","totalrecovered1","setTotalRecovered1","covidSummary","setCovidsummary","days","setDays","country","setCountry","coronaCountAr","setCoronaCountAr","label","setLabel","getcovidData","a","fetch","res","json","actualData","console","log","status","Global","TotalConfirmed","TotalRecovered","TotalDeaths","useEffect","data","labels","datasets","fill","backgroundColor","borderColor","formatDate","date","d","Date","month","getMonth","slice","_date","getDate","getCorornaReportByDateRange","countrySlug","from","to","axios","get","then","response","yAxisCoronacount","map","Cases","xaxis","covidDetails","Countries","find","Slug","catch","error","className","style","display","justifyContent","padding","color","class","margin","width","value","onChange","e","target","setDate","Country","height","Statewise","setData","statewise","currEle","ind","state","confirmed","recovered","deaths","active","India","history","useHistory","src","vaccine","alt","action","onclick","onClick","push","withRouter","unlisten","listen","window","scrollTo","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce3669fe.chunk.js","sourcesContent":["import '../App.css';\nimport React,{useEffect, useState} from 'react'; \nimport {Line} from \"react-chartjs-2\";\nimport axios from 'axios';\n  \nconst Home=()=>\n{\n  const [totalDeaths,setTotalDeaths]=useState(0);\n  const [totalconfirmed,setTotalConfirmed]=useState(0);\n  const [totalrecovered,setTotalRecovered]=useState(0);\n  const [totalDeaths1,setTotalDeaths1]=useState(0);\n  const [totalconfirmed1,setTotalConfirmed1]=useState(0);\n  const [totalrecovered1,setTotalRecovered1]=useState(0);\n  const [covidSummary,setCovidsummary]=useState({});\n  const[days,setDays]=useState(7);\n  const[country,setCountry]=useState('');\n  const[coronaCountAr,setCoronaCountAr]=useState([]);\n  const [label,setLabel]=useState([]);\n\n  const getcovidData=async()=>{\n    try{\n      const res=await fetch('https://api.covid19api.com/summary');\n      // console.log(res);\n      const actualData=await res.json();\n      console.log(actualData);\n      if(res.status===200){\n          setTotalConfirmed(actualData.Global.TotalConfirmed);\n          setTotalRecovered(actualData.Global.TotalRecovered);\n          setTotalDeaths(actualData.Global.TotalDeaths);\n          setCovidsummary(actualData);\n      }\n\n\n    }catch(err){\n      console.log(err);\n    }\n  }\n  useEffect(() => {\n    getcovidData();\n  }, []);\n\n  const data = {\n    labels: label,\n    datasets: [\n      {\n        label: '# of Cases',\n        data: coronaCountAr,\n        fill: false,\n        backgroundColor: 'rgb(255, 99, 132)',\n        borderColor: 'rgba(255, 99, 132, 0.2)',\n      },\n    ],\n  };\n  \n\n  const formatDate=(date)=>{\n    const d=new Date(date);\n    const month=`0${d.getMonth()+1}`.slice(-2);\n    const _date=d.getDate();\n    return `-${month}-${_date}`;\n  }\n\n  const countryHandler=(e)=>{\n    setCountry(e.target.value);\n    const d=new Date();\n    const to=formatDate(d);\n    const from=formatDate(d.setDate(d.getDate()-days));\n    \n\n    // console.log(from,to);\n\n    getCorornaReportByDateRange(e.target.value,from,to)\n  }\n  const daysHandler=(e)=>{\n    setDays(e.target.value);\n  }\n\n  const getCorornaReportByDateRange=(countrySlug,from,to)=>{\n    axios.get(`https://api.covid19api.com/total/country/${countrySlug}/status/confirmed?from=2020${from}T00:00:00Z&to=2020${to}T00:00:00Z`)\n    .then(response=>{\n      console.log(response);\n      const yAxisCoronacount=response.data.map(d=>d.Cases);\n      const xaxis=response.data.map(d=>d.Date);\n      const covidDetails = covidSummary.Countries.find(country=>country.Slug===countrySlug);\n\n      setCoronaCountAr(yAxisCoronacount);\n      console.log(yAxisCoronacount);\n      setTotalDeaths1(covidDetails.TotalDeaths);\n      setTotalRecovered1(covidDetails.TotalRecovered);\n      setTotalConfirmed1(covidDetails.TotalConfirmed);\n      setLabel(xaxis);\n      console.log(xaxis);\n\n    })\n    .catch(\n      error=>{\n        console.log(error);\n      }\n    )\n  }\n  \n\n  return(\n      <>\n      <div className=\"coronacon\">\n      \n      <div style={{\n        display: 'flex',\n        justifyContent:'center',\n        padding: '10px',\n        backgroundColor:'navy',\n        color:'white',\n      }}>\n      <h1>Worldwide Corona Reports</h1>\n      </div>\n\n      <div style={{\n        display: 'flex',\n        justifyContent:'space-around',\n        \n      }}>\n       <div class=\"card-container\">\n    <div class=\"card card-4\">\n      <h2 class=\"card__title\">Confirmed Cases</h2>\n      <h2 class=\"card__title\">{totalconfirmed}</h2>\n    </div>\n\n    <div class=\"card card-1\">\n      <h2 class=\"card__title\">Recovered Cases</h2>\n      <h2 class=\"card__title\">{totalrecovered}</h2>\n    </div>\n\n    <div class=\"card card-4\">\n      <h2 class=\"card__title\">Total Deaths</h2>\n      <h2 class=\"card__title\">{totalDeaths}</h2>\n    </div>\n    </div>\n      \n      </div>\n\n      <div style={{\n        display: 'flex',\n        justifyContent:'center',\n        margin:'20px',\n      }}>\n      <h1 className=\"uppercase\">{country}</h1>\n      </div>\n\n      <div style={{\n        display: 'flex',\n        justifyContent:'space-around',\n        \n      }}>\n       <div class=\"card-container\">\n    <div class=\"card card-2\">\n      <h2 class=\"card__title\">Confirmed Cases</h2>\n      <h2 class=\"card__title\">{totalconfirmed1}</h2>\n    </div>\n\n    <div class=\"card card-3\">\n      <h2 class=\"card__title\">Recovered Cases</h2>\n      <h2 class=\"card__title\">{totalrecovered1}</h2>\n    </div>\n\n    <div class=\"card card-5\">\n      <h2 class=\"card__title\">Total Deaths</h2>\n      <h2 class=\"card__title\">{totalDeaths1}</h2>\n    </div>\n    </div>\n      \n      </div>\n\n      <div style={{\n        display: 'flex',\n        justifyContent:'center',\n        margin:'50px'\n      }}>\n        <select style={{width:'300px',padding:'10px',margin:'20px'}}  value={country} onChange={countryHandler}>\n          {\n            covidSummary.Countries && covidSummary.Countries.map(country=>\n          <option key={country.Slug} value={country.Slug}>{country.Country}</option>\n            )\n          }\n        </select>\n        <select style={{width:'300px',padding:'10px',margin:'20px'}}  value={days} onChange={daysHandler}>\n              <option value=\"7\">Last 7 days</option>\n              <option value=\"30\">Last 30 days</option>\n              <option value=\"90\">Last 90 days</option>\n        </select>\n      </div>\n\n      <div style={{\n        width: '600px',\n        height:'600px' ,\n        margin:'50px auto'\n      }}>\n        <Line data={data}/>\n      </div>\n    </div>\n      </>\n  )\n}\n  \nexport default Home;","import React,{useEffect, useState} from 'react'; \nimport './statewise.css';\n  \nconst Statewise=()=>\n{\n\n    const[data,setData]=useState([]);\n \n\n    const getcovidData=async()=>{\n        try{\n          const res=await fetch('https://api.covid19india.org/data.json');\n          // console.log(res);\n          const actualData=await res.json();\n          console.log(actualData.statewise);\n          setData(actualData.statewise);\n          \n        }catch(err){\n          console.log(err);\n        }\n      }\n      useEffect(() => {\n        getcovidData();\n      }, []);\n\n     \n    return(\n      <><div className=\"flexstart\">\n        <h2>Statewise Tracker</h2>\n              <div className=\"table-wrapper\">\n                  <table className=\"fl-table\">\n                      <thead>\n                          <tr>\n                              <th>State</th>\n                              <th>Confirmed</th>\n                              <th>Recovered</th>\n                              <th>Deaths</th>\n                              <th>Active</th>\n                          </tr>\n                      </thead>\n                      <tbody>\n                          {\n                              data.map((currEle,ind)=>{\n                                  return(\n                                    <tr key={ind}>\n                                    <th>{currEle.state}</th>\n                                    <th>{currEle.confirmed}</th>\n                                    <th>{currEle.recovered}</th>\n                                    <th>{currEle.deaths}</th>\n                                    <th>{currEle.active}</th>\n                                </tr>\n\n                                  )\n                              })\n                          }\n                      </tbody>\n                  </table>\n\n              </div>\n              </div>\n      </>\n  )\n}\n  \nexport default Statewise;","export default __webpack_public_path__ + \"static/media/vaccine1.8bd800d9.jpg\";","import '../App.css';\nimport React,{useEffect, useState} from 'react'; \nimport {Line} from \"react-chartjs-2\";\nimport axios from 'axios';\nimport Statewise from './Statewise';\n\nimport vaccine from '../assets/vaccine1.jpg';\nimport { useHistory } from 'react-router-dom';\n  \nconst India=()=>{\n  const history = useHistory();\n  const redirect = () => {\n    history.push('/home')\n  }\n\n    const [totalDeaths1,setTotalDeaths1]=useState(0);\n  const [totalconfirmed1,setTotalConfirmed1]=useState(0);\n  const [totalrecovered1,setTotalRecovered1]=useState(0);\n  const[days,setDays]=useState(0);\n  const[coronaCountAr,setCoronaCountAr]=useState([]);\n  const [label,setLabel]=useState([]);\n\n    const getcovidData=async()=>{\n        try{\n          const res=await fetch('https://api.covid19india.org/data.json');\n          // console.log(res);\n          const actualData=await res.json();\n          console.log(actualData.statewise[0]);\n          setTotalConfirmed1(actualData.statewise[0].confirmed);\n          setTotalRecovered1(actualData.statewise[0].recovered);\n          setTotalDeaths1(actualData.statewise[0].deaths);\n        }catch(err){\n          console.log(err);\n        }\n      }\n      useEffect(() => {\n        getcovidData();\n      }, []);\n\n      const data = {\n        labels: label,\n        datasets: [\n          {\n            label: '# of Cases',\n            data: coronaCountAr,\n            fill: false,\n            backgroundColor: '\t#8A2BE2',\n            borderColor: '\t#D8BFD8',\n          },\n        ],\n      };\n      \n      const formatDate=(date)=>{\n        const d=new Date(date);\n        const month=`0${d.getMonth()+1}`.slice(-2);\n        const _date=d.getDate();\n        return `-${month}-${_date}`;\n      }\n      \n      const daysHandler=(e)=>{\n        setDays(e.target.value);\n        const d=new Date();\n        const to=formatDate(d);\n        const from=formatDate(d.setDate(d.getDate()-days));\n    \n\n    // console.log(from,to);\n\n        getCorornaReportByDateRange(from,to);\n      }\n\n      const getCorornaReportByDateRange=(from,to)=>{\n        axios.get(`https://api.covid19api.com/total/country/India/status/confirmed?from=2020${from}T00:00:00Z&to=2020${to}T00:00:00Z`)\n        .then(response=>{\n          console.log(response);\n          const yAxisCoronacount=response.data.map(d=>d.Cases);\n          const xaxis=response.data.map(d=>d.Date);\n\n    \n          setCoronaCountAr(yAxisCoronacount);\n          console.log(yAxisCoronacount);\n          setLabel(xaxis);\n          console.log(xaxis);\n    \n        })\n        .catch(\n          error=>{\n            console.log(error);\n          }\n        )\n      }\n  return(\n      <>\n      <div>\n      <div style={{\n        display: 'flex',\n        justifyContent:'center',\n        height: '100px',\n        backgroundColor:'#0A043C',\n        color: '#fff',\n      }}>\n      <h1 style={{margin:'30px'}}>COVID-19 INDIA TRACKER</h1>\n      </div>\n\n      <div style={{\n        display: 'flex',\n        justifyContent:'space-around',\n        \n      }}>\n      <div class=\"card-container\">\n    <div class=\"card card-4\">\n      <h2 class=\"card__title\">Confirmed Cases</h2>\n      <h2 class=\"card__title\">{totalconfirmed1}</h2>\n    </div>\n\n    <div class=\"card card-1\">\n      <h2 class=\"card__title\">Recovered Cases</h2>\n      <h2 class=\"card__title\">{totalrecovered1}</h2>\n    </div>\n\n    <div class=\"card card-4\">\n      <h2 class=\"card__title\">Total Deaths</h2>\n      <h2 class=\"card__title\">{totalDeaths1}</h2>\n    </div>\n    </div>\n    </div>\n\n      <div style={{display:'flex'}}>\n      <div style={{\n        width: '800px',\n        height:'800px' ,\n      }}>\n          <img src={vaccine} style={{margin:'20px',width:'100%'}} alt='vaccine'></img>\n          <div style={{display:'flex',justifyContent:'center',margin:'40px'}}>\n            <form action=\"https://selfregistration.cowin.gov.in/\">\n              <button style={{padding:'20px',margin:'20px'}} onclick=\"location.href='https://google.com';\">Register for Vaccine</button>\n            </form>\n            <button style={{padding:'20px',margin:'20px'}}\n            onClick={redirect}\n            >\n              Get Global Data\n              </button>\n          </div>\n          <div style={{display:'flex',justifyContent:'center'}} >\n          <select style={{width:'300px',padding:'10px',margin:'20px'}} value={days} onChange={daysHandler}>\n              <option value=\"7\">Last 7 days</option>\n              <option value=\"30\">Last 30 days</option>\n              <option value=\"90\">Last 90 days</option>\n          </select>\n          </div>\n        <Line data={data}/>\n      </div>\n      <Statewise/>\n      </div>\n      </div>\n      </>\n  )\n}\n  \nexport default India;","import { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nfunction ScrollToTop({ history }) {\n    useEffect(() => {\n        const unlisten = history.listen(() => {\n            window.scrollTo(0, 0);\n        });\n        return () => {\n            unlisten();\n        };\n    }, [history]);\n\n    return null;\n}\n\nexport default withRouter(ScrollToTop);","\nimport {  Route, Switch ,BrowserRouter as Router, Redirect} from 'react-router-dom';\nimport Home from './components/Home';\nimport India from './components/India';\nimport ScrollToTop from './components/ScrollToTop'\n\nfunction App() {\n  return (\n    <>\n      <Router>\n      <ScrollToTop/>\n        <Switch>\n          <Route exact path=\"/\" component={India}/>\n          <Route exact path=\"/home\" component={Home}/>\n          <Redirect to=\"/\"/>\n        </Switch>\n     \n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}